services:
  # https://airflow.apache.org/docs/docker-stack/index.html
  airflow:
    build: ./airflow
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/plugins:/opt/airflow/plugins
      - ./airflow/data:/data
      - ./duckdb:/duckdb
    ports:
      - 8080:8080
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://db:db@database/db
    depends_on:
      - database
    command: bash -c "/entrypoint.sh"

  # postgres required by airflow
  database:
    image: postgres:15-bookworm
    volumes:
      - pgdata:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: db
      POSTGRES_PASSWORD: db
      POSTGRES_DB: db

  # http://127.0.0.1:8888/lab
  jupyter:
    # https://jupyter-docker-stacks.readthedocs.io/en/latest/using/selecting.html#jupyter-base-notebook
    build: ./jupyter
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work
      - ./duckdb:/duckdb
    ports:
      - 8888:8888
    # https://jupyter-server.readthedocs.io/en/latest/other/full-config.html
    command: start-notebook.py --IdentityProvider.token=''

  duckdb:
    build: ./duckdb
    volumes:
      - ./duckdb:/duckdb

  superset:
    build: ./superset
    volumes:
      - ./duckdb:/duckdb
      - ./superset:/superset
    environment:
      SUPERSET_SECRET_KEY: secret
      SUPERSET_CONFIG_PATH: /superset/superset_config.py
    command: bash -c "/entrypoint.sh"
    ports:
      - 8088:8088

  dbt:
    build: dbt_project/.
    tty: true
    volumes:
      - ./dbt_project:/dbt_project
      - ./duckdb:/duckdb
    command: flask run --host=0.0.0.0 --debug

  observable-framework:
    build: ./observable-framework
    command: npm run dev -- --host 0.0.0.0
    volumes:
      - ./observable-framework:/app
      - ./duckdb:/duckdb
    environment:
      PGURL: postgresql://db:db@database/db
      SERVICES: '{
        "Airflow": "http://localhost:8080/home",
        "Jupyter": "http://localhost:8888/lab/tree/work",
        "Superset": "http://localhost:8088/"
        }'
    ports:
      - 3000:3000

volumes:
  # persist the postgres data when the container restarts
  pgdata:
